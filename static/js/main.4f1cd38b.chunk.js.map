{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/Clock.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","state","text","checked","date","Date","toISOString","slice","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","length","props","add","alert","onFormSubmit","preventDefault","className","onSubmit","this","type","placeholder","onFocus","onBlur","onChange","id","htmlFor","onClick","Component","Task","task","active","important","finishDate","style","color","fontWeight","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","a","b","toLowerCase","activeTasks","map","doneTasks","Clock","time","changeWelcomeTxt","welcome","getHours","timerID","setInterval","tick","clearInterval","toLocaleTimeString","App","counter","deleteTask","index","findIndex","splice","changeTaskStatus","forEach","getTime","addTask","prevState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f1cd38b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    text: \"\",\r\n    checked: false,\r\n    date: new Date().toISOString().slice(0, 10),\r\n  };\r\n\r\n  handleText = (e) => {\r\n    this.setState({\r\n      text: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCheckbox = (e) => {\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  };\r\n\r\n  handleDate = (e) => {\r\n    this.setState({\r\n      date: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { text, date, checked } = this.state;\r\n    if (text.length > 2) {\r\n      const add = this.props.add(text, date, checked);\r\n      if (add) {\r\n        this.setState({\r\n          text: \"\",\r\n          checked: false,\r\n          date: new Date().toISOString().slice(0, 10),\r\n        });\r\n      }\r\n    } else {\r\n      alert(\"Please enter a task longer than 2 characters\");\r\n    }\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onFormSubmit}>\r\n        <input\r\n          className=\"add_task\"\r\n          type=\"text\"\r\n          placeholder=\"Add task...\"\r\n          onFocus={(e) => (e.target.placeholder = \"\")}\r\n          onBlur={(e) => (e.target.placeholder = \"Add task...\")}\r\n          value={this.state.text}\r\n          onChange={this.handleText}\r\n        />\r\n\r\n        <div className=\"priority\">\r\n          <input\r\n            id=\"important\"\r\n            type=\"checkbox\"\r\n            checked={this.state.checked}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <label htmlFor=\"important\">Important</label>\r\n        </div>\r\n\r\n        <input\r\n          className=\"date\"\r\n          type=\"date\"\r\n          value={this.state.date}\r\n          onChange={this.handleDate}\r\n        />\r\n\r\n        <button className=\"add_btn\" onClick={this.handleClick}>\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Task = (props) => {\r\n  const style = {\r\n    color: \"#FF485C\",\r\n    fontWeight: \"700\",\r\n  };\r\n\r\n  const { text, date, id, active, important, finishDate } = props.task;\r\n\r\n  if (active) {\r\n    return (\r\n      <div className=\"active_task\">\r\n        <span style={important ? style : null}>\r\n          {text} <span className=\"active_date\">{date}</span>\r\n        </span>\r\n        <div className=\"active_buttons\">\r\n          <div onClick={() => props.change(id)}>Done</div>\r\n          <div onClick={() => props.delete(id)}>Remove</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const finish = new Date(finishDate).toLocaleString();\r\n    return (\r\n      <div className=\"done_task\">\r\n        <p>\r\n          <span>{text}</span>\r\n          <span className=\"finish_date\">{finish}</span>\r\n          <div className=\"done_btn\" onClick={() => props.delete(id)}>\r\n            Remove\r\n          </div>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst TaskList = (props) => {\r\n  const active = props.tasks.filter((task) => task.active);\r\n  const done = props.tasks.filter((task) => !task.active);\r\n\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) return 1;\r\n      if (a.finishDate > b.finishDate) return -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  if (active.length >= 2) {\r\n    active.sort((a, b) => {\r\n      a = a.text.toLowerCase();\r\n      b = b.text.toLowerCase();\r\n      if (a < b) return -1;\r\n      if (a > b) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  const activeTasks = active.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n  const doneTasks = done.map((task) => (\r\n    <Task\r\n      key={task.id}\r\n      task={task}\r\n      delete={props.delete}\r\n      change={props.change}\r\n    />\r\n  ));\r\n  return (\r\n    <>\r\n      <div className=\"active\">\r\n        <p>Tasks to be done:</p>\r\n        {activeTasks.length > 0 ? activeTasks : <p>You have free time</p>}\r\n      </div>\r\n      <div className=\"done\">\r\n        <p>Tasks done: {done.length}</p>\r\n        {done.length > 5 && <p>The last 5 tasks have been displayed</p>}\r\n        {doneTasks.slice(0, 5)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n  state = {\r\n    time: new Date(),\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: new Date(),\r\n    });\r\n  }\r\n\r\n  changeWelcomeTxt = () => {\r\n    let welcome = \"\";\r\n    if (this.state.time.getHours() < 12) {\r\n      welcome = \"Good morning,\";\r\n    } else if (\r\n      this.state.time.getHours() > 12 &&\r\n      this.state.time.getHours() < 18\r\n    ) {\r\n      welcome = \"Good afternoon,\";\r\n    } else if (this.state.time.getHours() > 18) {\r\n      welcome = \"Good evening,\";\r\n    }\r\n    return welcome;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"time\">\r\n        <div className=\"welcome_txt\">\r\n          <h1>{this.changeWelcomeTxt()}</h1>\r\n        </div>\r\n        <p>{this.state.time.toLocaleTimeString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React, { Component } from \"react\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport Clock from \"./Clock\";\nimport \"./App.css\";\n\nclass App extends Component {\n  counter = 9;\n  state = {\n    tasks: [],\n  };\n\n  deleteTask = (id) => {\n    let tasks = [...this.state.tasks];\n    const index = tasks.findIndex((task) => task.id === id);\n    tasks.splice(index, 1);\n    this.setState({\n      tasks,\n    });\n  };\n\n  changeTaskStatus = (id) => {\n    const tasks = [...this.state.tasks];\n    tasks.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    this.setState({\n      tasks,\n    });\n  };\n\n  addTask = (text, date, important) => {\n    const task = {\n      id: this.counter,\n      text,\n      date,\n      important,\n      active: true,\n      finishDate: null,\n    };\n    this.counter++;\n\n    this.setState((prevState) => ({\n      tasks: [...prevState.tasks, task],\n    }));\n\n    return true;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Clock />\n        <AddTask add={this.addTask} />\n        <TaskList\n          tasks={this.state.tasks}\n          delete={this.deleteTask}\n          change={this.changeTaskStatus}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}